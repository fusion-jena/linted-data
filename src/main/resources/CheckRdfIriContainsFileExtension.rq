#
# Copyright 2022 Merle Gänßinger (merle.gaenssinger@uni-jena.de)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

SELECT DISTINCT ?fileExtension ?iri
WHERE {
  VALUES ?fileExtension {"rt" "trdf" "shaclc" "shc" "rdf" "owl" "xml" "ttl" "trix" "nt" "jsonld" "n3" "rj" "trig" "rpb" "pbrdf" "jsonld10" "jsonld11" "nq"}.
  {?iri ?iri2 ?iri3 .} UNION {?iri2 ?iri ?iri3.} UNION {?iri2 ?iri3 ?iri.}.
    FILTER (isIRI(?iri) && REGEX(STR(?iri), CONCAT("\\.", ?fileExtension, "(#|/)")))
}
# to create the list of values:
#		List<String> fileExtensions = new ArrayList<String>();
#		RDFLanguages.getRegisteredLanguages().stream().map(Lang::getFileExtensions).flatMap(List::stream)
#				.forEach(extension -> {
#					fileExtensions.add('"' + extension + '"');
#				});
#		System.out.println(fileExtensions.toString().replaceAll(",", "").replace("[", "{").replace("]", "}"));
